!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-btn",inactiveButtonClass:"modal__save-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_visible"};function r(e,t,r){const n=t.id+"-error",o=e.querySelector("#"+n);t.classList.remove(r.inputErrorClass),o.textContent="",o.classList.remove(r.errorClass)}function n(e,t){e.classList.add(t.inactiveButtonClass),e.disabled=!0}function o(e,t,r){!function(e){return e.some((e=>!e.validity.valid))}(e)?function(e,t){e.classList.remove(t.inactiveButtonClass),e.disabled=!1}(t,r):n(t,r)}var s=e+"8650253b58b46f0f1c06.svg",a=e+"d38272e02bb4f1ab1c37.svg",c=e+"40608da7369d39bc1077.svg",i=e+"d73f076c46eb5467f5fc.svg";function d(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function l(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,o=n.textContent;d(!0,n,o,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{d(!1,n,o)}))}document.getElementById("header-logo").src=s;const u=document.getElementById("profile-img");document.getElementById("edit-profile-icon").src=a,document.getElementById("new-profile-icon").src=c;const m=document.querySelector(".profile__edit-btn");document.getElementById("edit-avatar-icon").src=i;const h=document.querySelector(".profile__edit-avatar-btn"),_=document.querySelector("#edit-modal"),f=_.querySelector("#name"),v=_.querySelector("#description"),p=document.querySelector(".profile__title"),y=document.querySelector(".profile__description"),b=document.querySelector("#card-template"),S=document.querySelector(".cards__list"),k=document.querySelector(".profile__new-btn"),E=document.querySelector("#post-modal"),q=document.querySelector("#link"),C=document.querySelector("#caption"),L=document.querySelector("#preview-modal"),g=L.querySelector(".modal__img"),U=L.querySelector(".modal__caption"),x=document.querySelector("#delete-modal"),$=document.forms["delete-form"],A=x.querySelector(".modal__delete-btn_cancel"),I=document.querySelector("#avatar-modal"),B=document.forms["avatar-form"],R=I.querySelector("#avatar"),w=B.querySelector(".modal__save-btn");let T,N;const P=E.querySelector(".modal__save-btn"),D=Array.from(document.querySelectorAll(".modal")),O=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}_checkResponse(e){if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(this._checkResponse)}postNewCard(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}editUserAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"3a6ee566-6806-49c1-b2d5-f8c291a34de7","Content-Type":"application/json"}});function j(e){"Escape"==e.key&&D.forEach((e=>{e.classList.contains("modal_opened")&&H(e)}))}function J(e){e.classList.add("modal_opened"),document.addEventListener("keydown",j)}function H(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",j)}function z(e){const t=b.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__image"),n=t.querySelector(".card__description"),o=t.querySelector(".card__like-btn"),s=t.querySelector(".card__delete-btn");return r.src=e.link,r.alt=`${e.name} pic`,n.textContent=e.name,e.isLiked&&o.classList.add("card__like-btn_liked"),o.addEventListener("click",(()=>{!function(e,t,r){T=e,N=r._id;let n=t;n.classList.contains("card__like-btn_liked")?O.removeLike(N).then((()=>{n.classList.remove("card__like-btn_liked")})).catch((e=>console.error(e))):O.likeCard(N).then((()=>{n.classList.add("card__like-btn_liked")})).catch((e=>console.error(e)))}(t,o,e)})),s.addEventListener("click",(()=>function(e,t){T=e,N=t._id,J(x)}(t,e))),r.addEventListener("click",(()=>{g.src=r.src,g.alt=`${n.textContent} pic`,U.textContent=n.textContent,J(L)})),t}var M;O.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{S.append(z(e))})),p.textContent=r.name,y.textContent=r.about,u.src=r.avatar})).catch((e=>{console.error(e)})),D.forEach((e=>{e.addEventListener("click",(t=>{t.target==e&&H(e)}))})),document.querySelectorAll(".modal__close-btn").forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>H(t)))})),h.addEventListener("click",(()=>{J(I)})),m.addEventListener("click",(()=>{var e,n;J(_),e=_,n=t,[f,v].forEach((t=>{r(e,t,n)})),f.value=p.textContent,v.value=y.textContent})),_.addEventListener("submit",(function(e){l((function(){return O.editUserInfo({name:f.value,about:v.value}).then((e=>{p.textContent=e.name,y.textContent=e.about,H(_)}))}),e)})),k.addEventListener("click",(()=>{J(E)})),A.addEventListener("click",(()=>{H(x)})),E.addEventListener("submit",(function(e){l((function(){return O.postNewCard(C.value,q.value).then((r=>{const o=z(r);S.prepend(o),e.target.reset(),n(P,t),H(E)}))}),e)})),$.addEventListener("submit",(function(e){l((function(){return O.removeCard(N).then((()=>{T.remove(),H(x)}))}),e,"Deleting...")})),B.addEventListener("submit",(function(e){l((function(){return O.editUserAvatar(R.value).then((r=>{u.src=r.avatar,H(I),e.target.reset(),n(w,t)}))}),e)})),M=t,Array.from(document.querySelectorAll(M.formSelector)).forEach((e=>{!function(e,t){const n=Array.from(e.querySelectorAll(t.inputSelector)),s=e.querySelector(t.submitButtonSelector);o(n,s,t),n.forEach((a=>{a.addEventListener("input",(()=>{!function(e,t,n){t.validity.valid?r(e,t,n):function(e,t,r,n){const o=t.id+"-error",s=e.querySelector("#"+o);t.classList.add(n.inputErrorClass),s.textContent=r,s.classList.add(n.errorClass)}(e,t,t.validationMessage,n)}(e,a,t),o(n,s,t)}))}))}(e,M)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,